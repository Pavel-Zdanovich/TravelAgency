<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet id="Create COUNTRY_SEQUENCE" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createSequence sequenceName="COUNTRY_SEQUENCE" startValue="1" cacheSize="0"/>
    </changeSet>

    <changeSet id="Create FEATURE_SEQUENCE" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createSequence sequenceName="FEATURE_SEQUENCE" startValue="1" cacheSize="0"/>
    </changeSet>

    <changeSet id="Create HOTEL_SEQUENCE" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createSequence sequenceName="HOTEL_SEQUENCE" startValue="1" cacheSize="0"/>
    </changeSet>

    <changeSet id="Create USER_SEQUENCE" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createSequence sequenceName="USER_SEQUENCE" startValue="1" cacheSize="0"/>
    </changeSet>

    <changeSet id="Create TOUR_SEQUENCE" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createSequence sequenceName="TOUR_SEQUENCE" startValue="1" cacheSize="0"/>
    </changeSet>

    <changeSet id="Create REVIEW_SEQUENCE" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createSequence sequenceName="REVIEW_SEQUENCE" startValue="1" cacheSize="0"/>
    </changeSet>

    <changeSet id="Create table COUNTRIES" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createTable tableName="COUNTRIES">
            <column name="COUNTRY_ID" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="COUNTRY_PK"/>
            </column>
            <column name="NAME" type="VARCHAR(50)"/>
        </createTable>
    </changeSet>

    <changeSet id="Create CONSTRAINTS for COUNTRIES" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            ALTER TABLE COUNTRIES ADD CONSTRAINT COUNTRY_NAME_CHECK CHECK (LENGTH(NAME) &gt;= 3)
        </sql>
        <sql dbms="postgresql" stripComments="true">
            ALTER TABLE COUNTRIES ADD CONSTRAINT COUNTRY_NAME_CHECK CHECK (LENGTH(NAME::TEXT) &gt;= 3)
        </sql>
    </changeSet>

    <changeSet id="Create table FEATURES" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createTable tableName="FEATURES">
            <column name="FEATURE_ID" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="FEATURE_PK"/>
            </column>
            <column name="NAME" type="VARCHAR(30)"/>
        </createTable>
    </changeSet>

    <changeSet id="Create CONSTRAINTS for FEATURES" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            ALTER TABLE FEATURES ADD CONSTRAINT FEATURE_NAME_CHECK CHECK (LENGTH(NAME) &gt;= 3)
        </sql>
        <sql dbms="postgresql" stripComments="true">
            ALTER TABLE FEATURES ADD CONSTRAINT FEATURE_NAME_CHECK CHECK (LENGTH(NAME::TEXT) &gt;= 3)
        </sql>
    </changeSet>

    <changeSet id="Create table HOTELS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createTable tableName="HOTELS">
            <column name="HOTEL_ID" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="HOTEL_PK"/>
            </column>
            <column name="NAME" type="VARCHAR(50)">
                <constraints nullable="false" unique="true" uniqueConstraintName="HOTEL_NAME_UNIQUE"/>
            </column>
            <column name="STARS" type="SMALLINT">
                <constraints nullable="false"/>
            </column>
            <column name="WEBSITE" type="VARCHAR(100)">
                <constraints nullable="false"/>
            </column>
            <column name="LATITUDE" type="DECIMAL(9,7)">
                <constraints nullable="false"/>
            </column>
            <column name="LONGITUDE" type="DECIMAL(10,7)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="Create CONSTRAINTS for HOTELS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <sql dbms="oracle" endDelimiter="\nGO" splitStatements="true" stripComments="true">
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_NAME_CHECK CHECK (LENGTH(NAME) &gt; 3)
        </sql>
        <sql dbms="oracle" endDelimiter="\nGO" splitStatements="true" stripComments="true">
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_STARS_CHECK CHECK (STARS &gt; 0 AND STARS &lt; 6)
        </sql>
        <sql dbms="oracle" endDelimiter="\nGO" splitStatements="true" stripComments="true">
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_WEBSITE_REGEX_CHECK CHECK (REGEXP_LIKE(WEBSITE,
            '^(https?:\/\/)?(www\.)?([a-z0-9\.\-]+)\.([a-z\.]{2,6})(\/[a-z0-9\.\-]*)*\/?$'))
        </sql>
        <sql dbms="oracle" endDelimiter="\nGO" splitStatements="true" stripComments="true">
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_LATITUDE_CHECK CHECK (LATITUDE &gt; -90.0000000 AND LATITUDE &lt; 90.0000000)
        </sql>
        <sql dbms="oracle" endDelimiter="\nGO" splitStatements="true" stripComments="true">
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_LONGITUDE_CHECK CHECK (LONGITUDE &gt; -180.000000 AND LONGITUDE &lt; 180.000000)
        </sql>
        <sql dbms="postgresql" stripComments="true">
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_NAME_CHECK CHECK (LENGTH(NAME::TEXT) &gt; 3);
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_STARS_CHECK CHECK(STARS &gt; 0 AND STARS &lt; 6);
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_WEBSITE_REGEX_CHECK CHECK (WEBSITE::TEXT ~
            '^(https?:\/\/)?(www\.)?([a-z0-9\.-]+)\.([a-z\.]{2,6})(\/[a-z0-9\.-]*)*\/?$'::TEXT);
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_LATITUDE_CHECK CHECK (LATITUDE &gt; -90.0000000 AND LATITUDE &lt; 90.0000000);
            ALTER TABLE HOTELS ADD CONSTRAINT HOTEL_LONGITUDE_CHECK CHECK (LONGITUDE &gt; -180.000000 AND LONGITUDE &lt; 180.000000);
        </sql>
    </changeSet>

    <changeSet id="Create table HOTELS_FEATURES" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createTable tableName="HOTELS_FEATURES">
            <column name="HOTEL_ID" type="BIGINT">
                <constraints nullable="false" foreignKeyName="HOTEL_FEATURE_HOTEL_ID_FK"/>
            </column>
            <column name="FEATURE_ID" type="BIGINT">
                <constraints nullable="false" foreignKeyName="HOTEL_FEATURE_FEATURE_ID_FK"/>
            </column>
        </createTable>
        <addPrimaryKey tableName="HOTELS_FEATURES" columnNames="HOTEL_ID, FEATURE_ID" constraintName="HOTELS_FEATURES_PK"/>
        <addForeignKeyConstraint baseTableName="HOTELS_FEATURES" baseColumnNames="HOTEL_ID"
                                 constraintName="HOTEL_FEATURE_HOTEL_ID_FK" referencedTableName="HOTELS"
                                 referencedColumnNames="HOTEL_ID"/>
        <addForeignKeyConstraint baseTableName="HOTELS_FEATURES" baseColumnNames="FEATURE_ID"
                                 constraintName="HOTEL_FEATURE_FEATURE_ID_FK" referencedTableName="FEATURES"
                                 referencedColumnNames="FEATURE_ID"/>
    </changeSet>

    <changeSet id="Create table USERS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createTable tableName="USERS">
            <column name="USER_ID" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="USER_PK"/>
            </column>
            <column name="LOGIN" type="VARCHAR(30)">
                <constraints nullable="false"/>
            </column>
            <column name="PASSWORD" type="VARCHAR(30)">
                <constraints nullable="false"/>
            </column>
            <column name="ROLE" type="VARCHAR(10)" defaultValue="USER">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="Create CONSTRAINTS for USERS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            ALTER TABLE USERS ADD CONSTRAINT USER_LOGIN_CHECK CHECK (LENGTH(LOGIN) &gt; 4)
        </sql>
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            ALTER TABLE USERS ADD CONSTRAINT USER_PASSWORD_CHECK CHECK (LENGTH(PASSWORD) &gt; 4)
        </sql>
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            ALTER TABLE USERS ADD CONSTRAINT USER_ROLE_CHECK CHECK (LENGTH(ROLE) &gt; 3 AND ROLE IN ('USER', 'ADMIN'))
        </sql>
        <sql dbms="postgresql" stripComments="true">
            ALTER TABLE USERS ADD CONSTRAINT USER_LOGIN_CHECK CHECK (LENGTH(LOGIN::TEXT) &gt; 4);
            ALTER TABLE USERS ADD CONSTRAINT USER_PASSWORD_CHECK CHECK (LENGTH(PASSWORD::TEXT) &gt; 4);
            ALTER TABLE USERS ADD CONSTRAINT USER_ROLE_CHECK CHECK (LENGTH(ROLE::TEXT) &gt; 3 AND ROLE IN ('USER', 'ADMIN'));
        </sql>
    </changeSet>

    <changeSet id="Create table TOURS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createTable tableName="TOURS">
            <column name="TOUR_ID" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="TOUR_PK"/>
            </column>
            <column name="PHOTO_PATH" type="VARCHAR(250)"/>
            <column name="START_DATE" type="TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="END_DATE" type="TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="DESCRIPTION" type="VARCHAR(1000)"/>
            <column name="COST" type="DECIMAL(14,4)">
                <constraints nullable="false"/>
            </column>
            <column name="TOUR_TYPE" type="VARCHAR(30)">
                <constraints nullable="false"/>
            </column>
            <column name="HOTEL_ID" type="BIGINT">
                <constraints foreignKeyName="TOUR_HOTEL_ID_FK"/>
            </column>
            <column name="COUNTRY_ID" type="BIGINT">
                <constraints foreignKeyName="TOUR_COUNTRY_ID_FK"/>
            </column>
        </createTable>
        <addForeignKeyConstraint baseTableName="TOURS" baseColumnNames="HOTEL_ID" constraintName="TOUR_HOTEL_ID_FK"
                                 referencedTableName="HOTELS" referencedColumnNames="HOTEL_ID"/>
        <addForeignKeyConstraint baseTableName="TOURS" baseColumnNames="COUNTRY_ID" constraintName="TOUR_COUNTRY_ID_FK"
                                 referencedTableName="COUNTRIES" referencedColumnNames="COUNTRY_ID"/>
    </changeSet>

    <changeSet id="Create CONSTRAINTS for TOURS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            ALTER TABLE TOURS ADD CONSTRAINT TOUR_COST_CHECK CHECK(COST > 0.0000)
        </sql>
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            ALTER TABLE TOURS ADD CONSTRAINT TOUR_TYPE_CHECK CHECK(TOUR_TYPE IN ('BUSINESS', 'ECOTOURISM', 'LEISURE',
            'PILGRIMAGE', 'RURAL_TOURISM', 'SCIENTIFIC_EXPEDITION', 'SPORT_COMPETITION', 'TOURISM', 'TRAINING', 'TREATMENT'))
        </sql>
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            CREATE OR REPLACE TRIGGER TOUR_CHECK_DATES_TRIGGER
                BEFORE INSERT OR UPDATE ON TOURS FOR EACH ROW
            BEGIN
                IF(:NEW.START_DATE &lt;= SYSTIMESTAMP)
                THEN
                    RAISE_APPLICATION_ERROR(-20001, 'INVALID TOUR START DATE: ' ||
                    TO_CHAR(:NEW.START_DATE, 'YYYY-MM-DD HH24:MI:SS') ||
                    '. START DATE MUST BE GREATER THAN THE CURRENT DATE: ' ||
                    TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS'));
                END IF;
                IF(:NEW.END_DATE &lt;= SYSTIMESTAMP)
                THEN
                    RAISE_APPLICATION_ERROR(-20001, 'INVALID TOUR END DATE:' ||
                    TO_CHAR(:NEW.END_DATE, 'YYYY-MM-DD HH24:MI:SS') ||
                    ' END DATE MUST BE GREATER THAN THE CURRENT DATE: ' ||
                    TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS'));
                END IF;
                IF(:NEW.END_DATE &lt; (:NEW.START_DATE + INTERVAL '1' DAY))
                THEN
                    RAISE_APPLICATION_ERROR(-20001, 'INVALID TOUR DURATION (START DATE - ' ||
                    TO_CHAR(:NEW.START_DATE, 'YYYY-MM-DD HH24:MI:SS') ||
                    ', END DATE - ' || TO_CHAR(:NEW.END_DATE, 'YYYY-MM-DD HH24:MI:SS' ) ||
                    ': DURATION MUST BE MORE THAN 1 DAY');
                END IF;
            END;
        </sql>
        <sql dbms="postgresql" stripComments="true">
            ALTER TABLE TOURS ADD CONSTRAINT TOUR_COST_CHECK CHECK (COST &gt; 0.0000);
            ALTER TABLE TOURS ADD CONSTRAINT TOUR_END_DATE_CHECK CHECK (AGE(END_DATE, START_DATE) &gt;= '1 DAY'::INTERVAL);
            ALTER TABLE TOURS ADD CONSTRAINT TOUR_START_DATE_CHECK CHECK (START_DATE &gt;= NOW());
            ALTER TABLE TOURS ADD CONSTRAINT TOUR_TYPE_CHECK CHECK (TOUR_TYPE IN ('BUSINESS', 'ECOTOURISM', 'LEISURE',
            'PILGRIMAGE', 'RURAL_TOURISM', 'SCIENTIFIC_EXPEDITION', 'SPORT_COMPETITION', 'TOURISM', 'TRAINING', 'TREATMENT'));
        </sql>
    </changeSet>

    <changeSet id="Create table USERS_TOURS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createTable tableName="USERS_TOURS">
            <column name="USER_ID" type="BIGINT">
                <constraints nullable="false" foreignKeyName="USER_TOUR_USER_ID_FK"/>
            </column>
            <column name="TOUR_ID" type="BIGINT">
                <constraints nullable="false" foreignKeyName="USER_TOUR_TOUR_ID_FK"/>
            </column>
        </createTable>
        <addPrimaryKey tableName="USERS_TOURS" columnNames="USER_ID, TOUR_ID" constraintName="USERS_TOURS_PK"/>
        <addForeignKeyConstraint baseTableName="USERS_TOURS" baseColumnNames="USER_ID"
                                 constraintName="USER_TOUR_USER_ID_FK"
                                 referencedTableName="USERS" referencedColumnNames="USER_ID"/>
        <addForeignKeyConstraint baseTableName="USERS_TOURS" baseColumnNames="TOUR_ID"
                                 constraintName="USER_TOUR_TOUR_ID_FK"
                                 referencedTableName="TOURS" referencedColumnNames="TOUR_ID"/>
    </changeSet>

    <changeSet id="Create table REVIEWS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createTable tableName="REVIEWS">
            <column name="REVIEW_ID" type="BIGINT">
                <constraints primaryKey="true" primaryKeyName="REVIEW_PK"/>
            </column>
            <column name="REVIEW_DATE" type="TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="REVIEW_TEXT" type="VARCHAR(1000)">
                <constraints nullable="false"/>
            </column>
            <column name="USER_ID" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="TOUR_ID" type="BIGINT">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addForeignKeyConstraint baseTableName="REVIEWS" baseColumnNames="USER_ID" constraintName="REVIEW_USER_ID_FK"
                                 referencedTableName="USERS" referencedColumnNames="USER_ID"/>
        <addForeignKeyConstraint baseTableName="REVIEWS" baseColumnNames="TOUR_ID" constraintName="REVIEW_TOUR_ID_FK"
                                 referencedTableName="TOURS" referencedColumnNames="TOUR_ID"/>
    </changeSet>

    <changeSet id="Create CONSTRAINTS for REVIEWS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <sql dbms="oracle" endDelimiter="\nGO" stripComments="true">
            CREATE OR REPLACE TRIGGER REVIEW_CHECK_DATE_TRIGGER
                BEFORE INSERT OR UPDATE ON REVIEWS FOR EACH ROW
            BEGIN
                IF( :NEW.REVIEW_DATE &lt;= SYSTIMESTAMP )
                THEN
                    RAISE_APPLICATION_ERROR( -20001, 'INVALID REVIEW DATE: ' ||
                    TO_CHAR(:NEW.REVIEW_DATE, 'YYYY-MM-DD HH24:MI:SS') ||
                    '. REVIEW DATE MUST BE GREATER THAN THE CURRENT DATE: ' ||
                    TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS'));
                END IF;
            END;
        </sql>
        <sql dbms="postgresql" stripComments="true">
            ALTER TABLE REVIEWS ADD CONSTRAINT REVIEW_DATE_CHECK CHECK (REVIEW_DATE &gt;= NOW());
        </sql>
    </changeSet>
</databaseChangeLog>