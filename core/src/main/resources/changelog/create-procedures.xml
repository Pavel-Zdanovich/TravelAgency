<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet id="Create DELETE_USER_REVIEWS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createProcedure dbms="oracle" procedureName="DELETE_USER_REVIEWS">
            CREATE OR REPLACE PROCEDURE DELETE_USER_REVIEWS (USER_ID IN NUMBER)
            IS
            BEGIN
            IF (USER_ID &gt; 0) THEN
            DELETE FROM REVIEWS R WHERE R.USER_ID = USER_ID;
            ELSE
            RAISE_APPLICATION_ERROR(-20001, 'INVALID USER ID: ' || USER_ID);
            END IF;
            END;
        </createProcedure>
        <createProcedure dbms="postgresql" procedureName="DELETE_USER_REVIEWS">
            CREATE OR REPLACE PROCEDURE DELETE_USER_REVIEWS (IN USER_ID BIGINT)
            LANGUAGE plpgsql
            AS $$
            BEGIN
            IF (USER_ID &gt; 0) THEN
            DELETE FROM REVIEWS R WHERE R.USER_ID = USER_ID;
            ELSE
            RAISE EXCEPTION 'INVALID USER ID: %', USER_ID;
            END IF;
            END;
            $$;
        </createProcedure>
    </changeSet>

    <changeSet id="Create DELETE_TOUR_REVIEWS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createProcedure dbms="oracle" procedureName="DELETE_TOUR_REVIEWS">
            CREATE OR REPLACE PROCEDURE DELETE_TOUR_REVIEWS (TOUR_ID IN NUMBER)
            IS
            BEGIN
            IF (TOUR_ID &gt; 0) THEN
            DELETE FROM REVIEWS R WHERE R.TOUR_ID = TOUR_ID;
            ELSE
            RAISE_APPLICATION_ERROR(-20001, 'INVALID TOUR ID: ' || TOUR_ID);
            END IF;
            END;
        </createProcedure>
        <createProcedure dbms="postgresql" procedureName="DELETE_TOUR_REVIEWS">
            CREATE OR REPLACE PROCEDURE DELETE_TOUR_REVIEWS (IN TOUR_ID BIGINT)
            LANGUAGE plpgsql
            AS $$
            BEGIN
            IF (TOUR_ID &gt; 0) THEN
            DELETE FROM REVIEWS R WHERE R.TOUR_ID = TOUR_ID;
            ELSE
            RAISE EXCEPTION 'INVALID TOUR ID: %', TOUR_ID;
            END IF;
            END;
            $$;
        </createProcedure>
    </changeSet>

    <changeSet id="Create MAKE_POSITIVE_REVIEWS" author="Liquibase" runAlways="true" runOnChange="true" failOnError="true">
        <createProcedure dbms="oracle" procedureName="MAKE_POSITIVE_REVIEWS">
            CREATE OR REPLACE PROCEDURE MAKE_POSITIVE_REVIEWS (USER_ID IN NUMBER, TOUR_ID IN NUMBER)
            IS
            BEGIN
            IF (USER_ID &gt; 0 AND TOUR_ID &gt; 0) THEN
            UPDATE REVIEWS R SET R.REVIEW_TEXT = REGEXP_REPLACE(R.REVIEW_TEXT, '\s*bad\s*', 'good')
            WHERE R.USER_ID = USER_ID AND REGEXP_LIKE(R.REVIEW_TEXT, '\s*bad\s*');
            ELSE
            RAISE_APPLICATION_ERROR(-20001, 'INVALID USER ID OR TOUR ID: ' || USER_ID || ' OR ' || TOUR_ID);
            END IF;
            END;
        </createProcedure>
        <createProcedure dbms="postgresql" procedureName="MAKE_POSITIVE_REVIEWS">
            CREATE OR REPLACE PROCEDURE MAKE_POSITIVE_REVIEWS (IN USER_ID BIGINT, IN TOUR_ID BIGINT)
            LANGUAGE plpgsql
            AS $$
            BEGIN
            IF (USER_ID &gt; 0 AND TOUR_ID &gt; 0) THEN
            UPDATE REVIEWS R SET R.REVIEW_TEXT = REGEXP_REPLACE(R.REVIEW_TEXT, '\s*bad\s*', 'good')
            WHERE R.USER_ID = USER_ID AND REGEXP_LIKE(R.REVIEW_TEXT, '\s*bad\s*');
            ELSE
            RAISE EXCEPTION 'INVALID USER ID OR TOUR ID: % OR %', USER_ID, TOUR_ID;
            END IF;
            END;
            $$;
        </createProcedure>
    </changeSet>

</databaseChangeLog>