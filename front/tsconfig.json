{
  "compilerOptions": {
    //Allow JavaScript files to be compiled.
    "allowJs": true,
    //module === "system" or esModuleInterop. Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
    "allowSyntheticDefaultImports": true,
    //Base directory to resolve non-relative module names
    "baseUrl": "src",
    //Generates corresponding .d.ts file.
    "declaration": true,
    //Emit __importStar and __importDefault helpers for runtime babel ecosystem compatibility and enable allowSyntheticDefaultImports for typesystem compatibility.
    "esModuleInterop": true,
    //Perform additional checks to ensure that separate compilation (such as with transpileModule or @babel/plugin-transform-typescript) would be safe.
    "isolatedModules": true,
    //"react", "preserve", "react-native". See JSX.
    "jsx": "react",
    //List of library files to be included in the compilation.
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    //(platform specific)	The locale to use to show error messages, e.g. en-us.
    "locale": "en",
    //Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'.
    "module": "ESNext",
    //module === "AMD" or "UMD" or "System" or "ES6" ? "Classic" : "Node". Determine how modules get resolved. Either "Node" for Node.js/io.js style resolution, or "Classic". See Module Resolution documentation for more details.
    "moduleResolution": "node",
    //Report errors for fallthrough cases in switch statements. Ensures that any non-empty case inside a switch statement includes either break or return
    "noFallthroughCasesInSwitch": true,
    //Report an error when not all code paths in function return a value.
    "noImplicitReturns": true,
    //TypeScript has a way to describe objects which have unknown keys but known values on an object, via index signatures
    "noUncheckedIndexedAccess": true,
    //Report errors on unused locals.
    "noUnusedLocals": true,
    //Report errors on unused parameters.
    "noUnusedParameters": true,
    //Redirect output structure to the directory.
    "outDir": "dist",
    //List of path mapping entries for module names to locations relative to the baseUrl
    /*"paths": {
      "*": [
        "src",
        "node_modules"
      ],
    },*/
    //Include modules imported with .json extension.
    "resolveJsonModule": true,
    //(common root directory is computed from the list of input files)	Specifies the root directory of input files. Only use to control the output directory structure with outDir.
    "rootDir": "src",
    //Skip type checking of all declaration files (*.d.ts).
    "skipLibCheck": true,
    //Generates corresponding .map file.
    "sourceMap": true,
    //Enable all strict type checking options.
    "strict": true,
    //Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'.
    "target": "ESNext",
    //Run the compiler in watch mode. Watch input files and trigger recompilation on changes. The implementation of watching files and directories can be configured using environment variable. See configuring watch for more details.
    //"watch": true,
    "plugins": [
      {
        "name": "typescript-plugin-css-modules"
      }
    ]
  }
}
